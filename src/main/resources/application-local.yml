spring:
  application:
    name: food-tour
  datasource:
    url: jdbc:mariadb://localhost:3306/fooddb?characterEncoding=UTF-8
    username: dbusr
    password: Mobility1!
    hikari: # hikari가 무엇? 찾아볼 것
      username: dbusr
      password: Mobility1!
      minimum-idle: 1
      maximum-pool-size: 5
      idle-timeout: 30000 # (ms), Connection이 사용되지 않고 Pool에 존재하는 시간
      max-lifetime: 60000 # (ms), Connection이 Pool에 살아 있는 시간
      connection-timeout: 50000 # (ms), Connection을 얻기 위한 대기 시간
  devtools:
    livereload:
      enabled: true
  jpa:
    open-in-view: false
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.spatial.dialect.mysql.MySQL56SpatialDialect
        show_sql: true
        format_sql: true
    hibernate:
      ddl-auto: create-drop #validate local이라서 create 옵션으로 했습니다. 차 후 정민교책임님께서, aws로 올릴 시, 기존 저희 운영계와 같이 validate를 하면 될 것 같습니다.
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
service:
  security:
    enabled: false
    secretKey: bW9iaWxpdHkxIQ==
    headerKeyName: X-AUTH-TOKEN
    tokenValidTime: 1800

jasypt:
  encryptor:
    bean: aesEncryptor

debug: true

server:
  port: 9030
logging:
  level:
    root: DEBUG
    com.hae.mobility: DEBUG
  file: ./log/was.log